// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel SolidRed
#pragma kernel SolidYellow
#pragma kernel SplitScreen

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
uint texResolution;

[numthreads(8,8,1)]
void SolidRed (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    Result[id.xy] = float4(1.0 , 0.0, 0.0, 0.0);
}

[numthreads(8,8,1)]
void SolidYellow (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    Result[id.xy] = float4(1.0, 1.0, 0.0, 0.0);
}

[numthreads(8,8,1)]
void SplitScreen (uint3 id : SV_DispatchThreadID)
{
    
    // TODO: insert actual code here!
    uint halfRes = texResolution >> 1;

    uint a = id.x/(halfRes);
    uint b = id.y/(halfRes);
    Result[id.xy] = float4(a*b + a,a*b + b,0.0,0.0);
    
}
